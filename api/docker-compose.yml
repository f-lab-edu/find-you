version: '3.8'

services:
#  mysql:
#    image: mysql:9.3.0-1.el9
#    container_name: find-you-mysql
#    environment:
#      MYSQL_ROOT_PASSWORD: root
#      MYSQL_DATABASE:
#      MYSQL_USER:
#      MYSQL_PASSWORD:
#    ports:
#      - "3307:3306"
#    volumes:
#      - mysql-data:/var/lib/mysql
#    networks:
#      - find-you
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
#    hostname: zookeeper
    container_name: aksrua-board-kafka-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
#    hostname: kafka
    container_name: aksrua-board-kafka-zookeeper
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9997:9997"
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
#      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
#      KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:29092
#      KAFKA_CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
#      KAFKA_CONFLUENT_METRICS_ENABLE: 'true'
#      KAFKA_CONFLUENT_SUPPORT_CUSTOMER_ID: anonymous
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

networks:
  spring-mysql-network:
    driver: find-you

volumes:
  mysql-data: